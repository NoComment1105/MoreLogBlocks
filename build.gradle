import com.modrinth.minotaur.TaskModrinthUpload

plugins {
	id('fabric-loom') version('0.11.+')
	id('maven-publish')
	id('com.modrinth.minotaur') version('1.2.1')
	id('com.matthewprenger.cursegradle') version('1.4.0')
	id('io.github.juuxel.loom-quiltflower') version('1.6.0')
	id('org.quiltmc.quilt-mappings-on-loom') version('4.0.0')
}

def targetJavaVersion = 17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	repositories {
		maven { url 'https://jitpack.io' }
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(loom.layered {
		addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${project.quilt_mappings}:v2"))
	})
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation 'com.github.astei:lazydfu:0.1.2'


}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding('UTF-8')
	it.options.deprecation(true)
	it.options.release.set(targetJavaVersion)
}

java {
	sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
	targetCompatibility = JavaVersion.toVersion(targetJavaVersion)
	withSourcesJar()
}

jar {
	from('LICENSE') {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

quiltflower {
	addToRuntimeClasspath.set(true)
}

task modrinth(type: TaskModrinthUpload, dependsOn: remapJar) {
	onlyIf {
		System.getenv('MODRINTH_TOKEN')
	}
	token = System.getenv('MODRINTH_TOKEN')
	projectId = 'PtVD7NAO'
	versionNumber = "More Log Variants ${project.version}"
	versionName = "[$project.minecraft_version] v${project.version}"
	versionType = 'RELEASE'
	uploadFile = remapJar
	addGameVersion('1.17')
	addGameVersion('1.17.1')
	addGameVersion('1.18-pre1')
	addLoader('fabric')
}